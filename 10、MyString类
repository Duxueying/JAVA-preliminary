import java.util.Arrays;
public class MyString {
    private final char[] value;
    public MyString(char[] value){
        this.value=Arrays.copyOf(value,value.length);
    }
    public MyString(char[] value,int offset,int count){
        this.value=Arrays.copyOfRange(value,offset,offset+count)
    }
    public char charAt(int index){  //返回指定索引处的字符
        return value[index];
    }
    public char[] toCharArray(){
        return Arrays.copyOf(value,value.length);
    }
    public boolean equals(Object o){
        if(this==o){
            return true;
        }
        if(!(o instanceof MyString)){ //判断左边对象是否为右边类的实例{
            return false;
        }
        MyString myString=(MyString) o;
        return Arrays.equals(value,myString.value);
    }
    public int hashCode(){
        return Arrays.hashCode(value);
    }
    public MyString toUpperCase(){
        char[] value=toCharArray();
        for(int i=0;i<value.length;i++){
            if(Character.isLowerCase(value[i])){
                value[i]=Character.toUpperCase(value[i]);
            }
        }
        return new MyString(value);
    }
    public boolean equalsIgnoreCase(MyString o) {
        if (o == null) {
            return false;
        }
        if (value.length != o.value.length) {
            return false;
        }
        for (int i = 0; i < value.length; i++) {
            char c = Character.toUpperCase(value[i]);
            char d = Character.toUpperCase(o.value[i]);
            if (c != d) {
                return false;
            }
        }
        return true;
    }
    public MyString concat(MyString o) {
        char[] v = new char[value.length + o.value.length];
        System.arraycopy(value, 0, v, 0, value.length);
        System.arraycopy(o.value, 0, v, value.length, o.value.length);
        return new MyString(v);
    }
}
