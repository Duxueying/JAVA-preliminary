class Date {
	public int year;
	public int month;
	public int day;
	
	public int[] day_of_month = {
		31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
	};
	//构造方法
	public Date(int year, int month, int day) {          // 用户传入参数的合法性校验 （校验年月日范围）构造方法     
		if (year < 1840 || year > 2020) {
			System.err.println("超出年范围");
			return;
		}
		if (month < 1 || month > 12) {
			System.err.println("超出月范围");  //标准输出
			return;
		}
		if (day < 1 || day > calcDaysOfMonth(year, month)) {
			System.err.println("天数不对");
			return;
		}
		this.year = year;    //命名遮挡问题，前面的year是属性
		this.month = month;
		this.day = day;
	}
	
	public int calcDaysOfMonth(int year, int month) {
		if (month != 2) {
			return day_of_month[month - 1];
		}
		if (isLeapYear(year)) {
			return 29;
		} else {
			return 28;
		}
	}
	
	public boolean isLeapYear(int year) 
	{
		if ((year % 4 == 0 && year % 100 != 0)||(year % 400 == 0)) 
		{
			return true;
		}
		return false;
	}
	
	public Date after(int days) {
		day += days;
		while (day > calcDaysOfMonth(year, month)){
			day -= calcDaysOfMonth(year, month);
			month += 1;
			if (month > 12)
			{
				month = 1;
				year += 1;
			}
		}
		return this; //指向当前对象的引用
	}
	public String toString() {
		return String.format("%04d-%02d-%02d", year, month, day);
	}
}
public class a720{
	public static void main(String[] args) {
		Date d = new Date(2019, 7, 20);  // d和r指向同一个对象
		Date r = d.after(80);
		System.out.println(r.toString());
	}
}
